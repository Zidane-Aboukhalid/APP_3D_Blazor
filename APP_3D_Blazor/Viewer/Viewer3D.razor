@inject IJSRuntime _jsRuntime

@if (!_loading3DScene)
{
    <button class="btn btn-outline-primary" @onclick="Loading3DScene">Charger la Scène...</button>
}

@if (_loading3DScene)
{
    <div id="status-card-@InstanceId" class="card position-fixed" style="display: none;">
        <!-- Contenu de la carte de statut -->
    </div>

    <div id="mySidenav-@InstanceId" class="sidenav">
        <!-- Boutons de zone seront ajoutés ici -->
    </div>

    <button class="btn btn-info" id="showNavBar-@InstanceId" style="font-size:30px;cursor:pointer" onclick="openNav('@InstanceId')">&#9776;</button>

    <div id="main-view-@InstanceId" style="width:640px; height:320px;">
        <div id="btn-group-container-@InstanceId" class="btn-group-vertical me-2" role="group" aria-label="Control Group" style="z-index:2;">
            <button type="button" class="btn btn-secondary"><i class="fas fa-mouse-pointer"></i></button>
            <button type="button" class="btn btn-secondary"><i class="fas fa-arrows-alt"></i></button>
            <button type="button" class="btn btn-secondary"><i class="fas fa-sync-alt"></i></button>
            <button type="button" class="btn btn-secondary"><i class="fas fa-compress-alt"></i></button>
            <button type="button" class="btn btn-secondary"><i class="fas fa-plus-square"></i></button>
        </div>
    </div>
}

@code {
    [Parameter]
    public string InstanceId { get; set; }

    private bool _loading3DScene = false;

    private async Task Loading3DScene()
    {
        _loading3DScene = true;
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender && _loading3DScene)
        {
            await _jsRuntime.InvokeVoidAsync("init_Scene", InstanceId);
        }
    }

    [JSInvokable]
    public static Task MyCSharpFunction(object data, string instanceId)
    {
        Console.WriteLine($"Data from {instanceId}: " + data);
        return Task.CompletedTask;
    }
}
